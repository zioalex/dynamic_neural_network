{"version":3,"sources":["nn_diagram.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NetworkDiagram","_ref","step","Node","_ref2","cx","cy","label","type","stepVisible","React","createElement","r","fill","getNodeColor","isActive","input","hidden","output","expected","loss","stroke","strokeWidth","x","y","textAnchor","dy","fontSize","Connection","_ref3","x1","y1","x2","y2","isBackprop","markerEnd","Value","_ref4","value","isGradient","style","opacity","width","height","rx","WeightUpdate","_ref5","oldWeight","newWeight","className","id","markerWidth","markerHeight","refX","refY","orient","points","ValueTable","_ref6","currentStep","component","values","description","color","textColor","map","_ref7","rowStep","key","backgroundColor","idx","Fragment","length","StepMessage","_ref8","0","1","2","3","4","5","6","7","8","9","NeuralNetwork","setStep","useState","isPlaying","setIsPlaying","useEffect","timer","setInterval","prev","clearInterval","onClick","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1cea3f7e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface NetworkDiagramProps {\n  step: number;\n}\n\ninterface NodeProps {\n  cx: number;\n  cy: number;\n  label: string;\n  type: string;\n  stepVisible: number;\n}\n\ninterface ConnectionProps {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  stepVisible: number;\n  isBackprop?: boolean;\n}\n\ninterface ValueProps {\n  x: number;\n  y: number;\n  value: string | number;\n  stepVisible: number;\n  isGradient?: boolean;\n}\n\ninterface WeightUpdateProps {\n  x: number;\n  y: number;\n  oldWeight: number;\n  newWeight: number;\n  stepVisible: number;\n}\n\n\nconst NetworkDiagram: React.FC<NetworkDiagramProps> = ({ step }) => {\n  const Node: React.FC<NodeProps> = ({ cx, cy, label, type, stepVisible }) => {\n    const getNodeColor = (type: NodeProps['type'], isActive: boolean) => {\n      if (!isActive) return \"#f0f0f0\";\n      const colors: { [key in NodeProps['type']]: string } = {\n        input: \"#333333\",\n        hidden: \"#ffeeba\",\n        output: \"#d5f5e3\",\n        expected: \"#d5f5e3\",\n        loss: \"#f5b7b1\"\n      };\n      return colors[type];\n    };\n\n\n    return (\n      <g>\n        <circle\n          cx={cx}\n          cy={cy}\n          r=\"30\"\n          fill={step >= stepVisible ? getNodeColor(type, true) : \"#f0f0f0\"}\n          stroke={step >= stepVisible ? \"#333\" : \"#ddd\"}\n          strokeWidth=\"3\"\n        />\n        <text\n          x={cx}\n          y={cy}\n          textAnchor=\"middle\"\n          dy=\".3em\"\n          fill={type === \"input\" && step >= stepVisible ? \"#fff\" : \"#666\"}\n          fontSize=\"16\"\n        >\n          {label}\n        </text>\n      </g>\n    );\n  };\n\n  const Connection: React.FC<ConnectionProps> = ({ x1, y1, x2, y2, stepVisible, isBackprop = false }) => (\n    <line\n      x1={x1}\n      y1={y1}\n      x2={x2}\n      y2={y2}\n      stroke={step >= stepVisible ? (isBackprop ? \"#ff4444\" : \"#333\") : \"#f0f0f0\"}\n      strokeWidth={step >= stepVisible ? \"3\" : \"2\"}\n      markerEnd={isBackprop ? \"url(#arrowhead)\" : \"\"}\n    />\n  );\n\n  const Value: React.FC<ValueProps> = ({ x, y, value, stepVisible, isGradient = false }) => (\n    <g style={{ opacity: step >= stepVisible ? 1 : 0 }}>\n      <rect\n        x={x - 40}\n        y={y - 15}\n        width=\"80\"\n        height=\"30\"\n        fill={isGradient ? \"#ffeeee\" : \"white\"}\n        stroke={isGradient ? \"#ff4444\" : \"#666\"}\n        rx=\"6\"\n      />\n      <text\n        x={x}\n        y={y}\n        textAnchor=\"middle\"\n        dy=\".3em\"\n        fontSize=\"14\"\n        fill={isGradient ? \"#ff4444\" : \"#333\"}\n      >\n        {value}\n      </text>\n    </g>\n  );\n\n  const WeightUpdate: React.FC<WeightUpdateProps> = ({ x, y, oldWeight, newWeight, stepVisible }) => (\n    <g style={{ opacity: step >= stepVisible ? 1 : 0 }}>\n      <rect\n        x={x - 50}\n        y={y - 15}\n        width=\"100\"\n        height=\"30\"\n        fill=\"#e8f4ff\"\n        stroke=\"#4a90e2\"\n        rx=\"6\"\n      />\n      <text\n        x={x}\n        y={y}\n        textAnchor=\"middle\"\n        dy=\".3em\"\n        fontSize=\"14\"\n        fill=\"#2c5282\"\n      >\n        {`${oldWeight} → ${newWeight}`}\n      </text>\n    </g>\n  );\n\n  return (\n    <svg width=\"1000\" height=\"600\" className=\"bg-white rounded shadow p-8\">\n      <defs>\n        <marker\n          id=\"arrowhead\"\n          markerWidth=\"15\"\n          markerHeight=\"10\"\n          refX=\"9\"\n          refY=\"5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 15 5, 0 10\" fill=\"#ff4444\" />\n        </marker>\n      </defs>\n\n      {/* Forward Connections */}\n      <Connection x1={150} y1={150} x2={450} y2={120} stepVisible={2} />\n      <Connection x1={150} y1={150} x2={450} y2={380} stepVisible={2} />\n      <Connection x1={150} y1={350} x2={450} y2={120} stepVisible={2} />\n      <Connection x1={150} y1={350} x2={450} y2={380} stepVisible={2} />\n      <Connection x1={450} y1={120} x2={750} y2={250} stepVisible={3} />\n      <Connection x1={450} y1={380} x2={750} y2={250} stepVisible={3} />\n\n      {/* Backpropagation */}\n      <Connection x1={850} y1={250} x2={750} y2={250} stepVisible={5} isBackprop={true} />\n      <Connection x1={750} y1={250} x2={450} y2={120} stepVisible={6} isBackprop={true} />\n      <Connection x1={750} y1={250} x2={450} y2={380} stepVisible={6} isBackprop={true} />\n      <Connection x1={450} y1={120} x2={150} y2={150} stepVisible={7} isBackprop={true} />\n      <Connection x1={450} y1={120} x2={150} y2={350} stepVisible={7} isBackprop={true} />\n      <Connection x1={450} y1={380} x2={150} y2={150} stepVisible={7} isBackprop={true} />\n      <Connection x1={450} y1={380} x2={150} y2={350} stepVisible={7} isBackprop={true} />\n\n      {/* Nodes */}\n      <Node cx={150} cy={150} label=\"x₁\" type=\"input\" stepVisible={1} />\n      <Node cx={150} cy={350} label=\"x₂\" type=\"input\" stepVisible={1} />\n      <Node cx={450} cy={120} label=\"h₁\" type=\"hidden\" stepVisible={2} />\n      <Node cx={450} cy={380} label=\"h₂\" type=\"hidden\" stepVisible={2} />\n      <Node cx={750} cy={250} label=\"ŷ\" type=\"output\" stepVisible={3} />\n      <Node cx={850} cy={150} label=\"y\" type=\"expected\" stepVisible={4} />\n      <Node cx={850} cy={250} label=\"Loss\" type=\"loss\" stepVisible={4} />\n\n      {/* Forward Values */}\n      <Value x={150} y={80} value=\"0.5\" stepVisible={1} />\n      <Value x={150} y={420} value=\"0.8\" stepVisible={1} />\n      <Value x={450} y={50} value=\"0.49\" stepVisible={2} />\n      <Value x={450} y={450} value=\"0.62\" stepVisible={2} />\n      <Value x={750} y={180} value=\"0.55\" stepVisible={3} />\n      <Value x={850} y={80} value=\"1.0\" stepVisible={4} />\n      <Value x={850} y={320} value=\"0.45\" stepVisible={4} />\n\n      {/* Gradients */}\n      <Value x={800} y={250} value=\"dL/dy=-0.45\" stepVisible={5} isGradient={true} />\n      <Value x={500} y={80} value=\"dL/dh₁=-0.23\" stepVisible={6} isGradient={true} />\n      <Value x={500} y={420} value=\"dL/dh₂=-0.22\" stepVisible={6} isGradient={true} />\n      <Value x={300} y={100} value=\"dL/dw₁₁=-0.115\" stepVisible={7} isGradient={true} />\n      <Value x={300} y={200} value=\"dL/dw₁₂=-0.184\" stepVisible={7} isGradient={true} />\n      <Value x={300} y={300} value=\"dL/dw₂₁=-0.110\" stepVisible={7} isGradient={true} />\n      <Value x={300} y={400} value=\"dL/dw₂₂=-0.176\" stepVisible={7} isGradient={true} />\n\n      {/* Weight Updates */}\n      <WeightUpdate x={280} y={120} oldWeight={0.5} newWeight={0.512} stepVisible={8} />\n      <WeightUpdate x={280} y={180} oldWeight={0.3} newWeight={0.318} stepVisible={8} />\n      <WeightUpdate x={280} y={320} oldWeight={0.6} newWeight={0.611} stepVisible={8} />\n      <WeightUpdate x={280} y={380} oldWeight={0.4} newWeight={0.418} stepVisible={8} />\n    </svg>\n  );\n};\n\ninterface ValueTableProps {\n  currentStep: number;\n}\n\nconst ValueTable: React.FC<ValueTableProps> = ({ currentStep }) => (\n  <div className=\"p-6 bg-white rounded shadow\">\n    <table className=\"min-w-full border-collapse text-left\">\n      <thead>\n        <tr className=\"bg-gray-50\">\n          <th className=\"p-4 border text-lg font-semibold\">Step</th>\n          <th className=\"p-4 border text-lg font-semibold\">Component</th>\n          <th className=\"p-4 border text-lg font-semibold\">Values</th>          <th className=\"p-4 border text-lg font-semibold\">Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {[\n          {\n            step: 1,\n            component: \"Inputs\",\n            values: [\"x₁ = 0.5\", \"x₂ = 0.8\"],\n            description: \"This is a long description that should wrap to the next line\",\n            color: \"#333333\",\n            textColor: \"white\"\n          },\n          {\n            step: 2,\n            component: \"Hidden Layer\",\n            values: [\n              \"h₁ = 0.49 (w₁₁ = 0.5, w₁₂ = 0.3)\",\n              \"h₂ = 0.62 (w₂₁ = 0.6, w₂₂ = 0.4)\"\n            ],\n            description: \"Desc\",\n\n            color: \"#ffeeba\"\n          },\n          {\n            step: 3,\n            component: \"Output\",\n            values: [\"ŷ = 0.55\"],\n            description: \"Desc\",\n            color: \"#d5f5e3\"\n          },\n          {\n            step: 4,\n            component: \"Loss\",\n            values: [\"y = 1.0\", \"Loss = 0.45\"],\n            description: \"Desc\",\n            color: \"#f5b7b1\"\n          },\n          {\n            step: 5,\n            component: \"Output Gradient\",\n            values: [\"dL/dy = -0.45\"],\n            description: \"Desc\",\n            color: \"#ffeeee\"\n          },\n          {\n            step: 6,\n            component: \"Hidden Gradients\",\n            values: [\"dL/dh₁ = -0.23\", \"dL/dh₂ = -0.22\"],\n            description: \"Desc\",\n            color: \"#ffeeee\"\n          },\n          {\n            step: 7,\n            component: \"Weight Gradients\",\n            values: [\n              \"dL/dw₁₁ = -0.115\",\n              \"dL/dw₁₂ = -0.184\",\n              \"dL/dw₂₁ = -0.110\",\n              \"dL/dw₂₂ = -0.176\"\n            ],\n            description: \"Desc\",\n            color: \"#ffeeee\"\n          },\n          {\n            step: 8,\n            component: \"Weight Updates\",\n            values: [\n              \"w₁₁: 0.5 → 0.512\",\n              \"w₁₂: 0.3 → 0.318\",\n              \"w₂₁: 0.6 → 0.611\",\n              \"w₂₂: 0.4 → 0.418\"\n            ],\n            description: \"Desc\",\n            color: \"#e8f4ff\"\n          },\n          {\n            step: 9,\n            component: \"Complete\",\n            values: [\"Ready for next iteration\"],\n            description: \"Desc\",\n            color: \"#e6f3ff\"\n          }\n        ].map(({ step: rowStep, component, values, description, color, textColor = \"black\" }) => (\n          <tr\n            key={rowStep}\n            style={{\n              backgroundColor: currentStep >= rowStep ? color : \"#f3f4f6\",\n              color: currentStep >= rowStep ? textColor : \"black\"\n            }}\n          >\n            <td className=\"p-4 border text-lg\">{rowStep}</td>\n            <td className=\"p-4 border text-lg\">{component}</td>\n            <td className=\"p-4 border text-lg\">\n              {values.map((value, idx) => (\n                <React.Fragment key={idx}>\n                  {value}\n                  {idx < values.length - 1 && <br />}\n                </React.Fragment>\n              ))}\n            </td>\n            <td className=\"p-4 border text-lg\">{description}</td>\n\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\ninterface StepMessageProps {\n  step: number;\n}\n\nconst StepMessage: React.FC<StepMessageProps> = ({ step }) => {\n  const messages: { [key: number]: string } = {\n    0: \"Click Play to start the animation\",\n    1: \"Step 1: Input values enter the network\",\n    2: \"Step 2: Values propagate to hidden layer\",\n    3: \"Step 3: Hidden layer produces output\",\n    4: \"Step 4: Calculate loss\",\n    5: \"Step 5: Start backpropagation\",\n    6: \"Step 6: Propagate to hidden layer\",\n    7: \"Step 7: Calculate weight gradients\",\n    8: \"Step 8: Update weights\",\n    9: \"Step 9: Ready for next iteration\"\n  };\n\n  return (\n    <div className=\"mt-6 p-6 bg-white rounded shadow w-full max-w-3xl text-center text-lg\">\n      {messages[step]}\n    </div>\n  );\n};\n\nconst NeuralNetwork = () => {\n  const [step, setStep] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout | number;\n    if (isPlaying) {\n      timer = setInterval(() => {\n        setStep((prev) => (prev < 9 ? prev + 1 : 0));\n      }, 2000);\n    }\n    return () => clearInterval(timer);\n  }, [isPlaying]);\n\n  return (\n    <div className=\"flex flex-col md:flex-row gap-8 p-8 bg-gray-100\">\n      <div className=\"flex flex-col items-center\">\n        <div className=\"mb-6 space-x-6\">\n          <button\n            className=\"px-6 py-3 text-lg bg-blue-500 text-white rounded hover:bg-blue-600\"\n            onClick={() => setIsPlaying(!isPlaying)}\n          >\n            {isPlaying ? \"Pause\" : \"Play\"}\n          </button>\n          <button\n            className=\"px-6 py-3 text-lg bg-gray-500 text-white rounded hover:bg-gray-600\"\n            onClick={() => setStep(0)}\n          >\n            Reset\n          </button>\n          <span className=\"text-lg text-gray-600\">Step: {step}/9</span>\n        </div>\n\n        <NetworkDiagram step={step} />\n        <StepMessage step={step} />\n      </div>\n\n      <div className=\"md:w-1/3\">\n        <ValueTable currentStep={step} />\n      </div>\n    </div>\n  );\n};\n\nexport default NeuralNetwork;","// src/App.tsx\nimport React from 'react';\nimport NeuralNetwork from './nn_diagram.tsx'; // Import your component\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <NeuralNetwork /> \n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}